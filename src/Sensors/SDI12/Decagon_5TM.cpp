///////////////////////////////////////////////////////////////////////////////
///
/// @file		Loom_Decagon_5TM.cpp
/// @brief		File for Loom_Decagon5TM implementation. Incomplete.
/// @author		Luke Goertzen
/// @date		2019
/// @copyright	GNU General Public License v3.0
///
///////////////////////////////////////////////////////////////////////////////

#include "Decagon_5TM.h"

///////////////////////////////////////////////////////////////////////////////
Loom_Decagon5TM::Loom_Decagon5TM(
		LoomManager* manager,
		const uint8_t		num_samples
	)
	: LoomSDI12Sensor(manager, "5TM", Type::Decagon5TM, num_samples )
{
  LMark;

}

///////////////////////////////////////////////////////////////////////////////
Loom_Decagon5TM::Loom_Decagon5TM(LoomManager* manager, JsonArrayConst p)
	: Loom_Decagon5TM(manager, (uint8_t)p[0] ) {}

///////////////////////////////////////////////////////////////////////////////
void Loom_Decagon5TM::print_config() const
{
  LMark;
	LoomSDI12Sensor::print_config();
 	LMark;
}

///////////////////////////////////////////////////////////////////////////////
void Loom_Decagon5TM::print_measurements() const
{
  LMark;

}

///////////////////////////////////////////////////////////////////////////////
void Loom_Decagon5TM::measure()
{
  LMark;

}

///////////////////////////////////////////////////////////////////////////////
void Loom_Decagon5TM::package(JsonObject json)
{
  LMark;
	// package_json(json, module_name, "Temp", temperature);
}

///////////////////////////////////////////////////////////////////////////////
void Loom_Decagon5TM::diagnose(bool& result){
  LMark;
	// implement here
}

///////////////////////////////////////////////////////////////////////////////
