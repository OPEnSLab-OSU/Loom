///////////////////////////////////////////////////////////////////////////////
///
/// @file		Loom_Decagon_5TM.cpp
/// @brief		File for Decagon5TM implementation. Incomplete.
/// @author		Luke Goertzen
/// @date		2019
/// @copyright	GNU General Public License v3.0
///
///////////////////////////////////////////////////////////////////////////////

#ifdef LOOM_INCLUDE_SENSORS

#include "Decagon_5TM.h"
#include "Module_Factory.h"

using namespace Loom;

///////////////////////////////////////////////////////////////////////////////

// Uncomment once implemented
// REGISTER(LoomModule, Decagon5TM, "Decagon5TM");

///////////////////////////////////////////////////////////////////////////////
Decagon5TM::Decagon5TM(const uint8_t num_samples)
	: SDI12Sensor("5TM", Type::Decagon5TM, num_samples) 
{

}

///////////////////////////////////////////////////////////////////////////////
Decagon5TM::Decagon5TM(JsonArrayConst p)
	: Decagon5TM((uint8_t)p[0] ) {}

///////////////////////////////////////////////////////////////////////////////
void Decagon5TM::print_config() const
{
	SDI12Sensor::print_config();
}

///////////////////////////////////////////////////////////////////////////////
void Decagon5TM::print_measurements() const
{

}

///////////////////////////////////////////////////////////////////////////////
void Decagon5TM::measure()
{

}

///////////////////////////////////////////////////////////////////////////////
void Decagon5TM::package(JsonObject json)
{
	// package_json(json, module_name, "Temp", temperature);
}

///////////////////////////////////////////////////////////////////////////////

#endif // ifdef LOOM_INCLUDE_SENSORS